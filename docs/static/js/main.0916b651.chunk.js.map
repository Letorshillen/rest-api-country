{"version":3,"sources":["components/FileLoader.jsx","components/CountryFile.jsx","components/CountriesList.jsx","components/Header.jsx","components/SearchBar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["FileLoader","viewBox","x","y","rx","ry","width","height","CountryFile","props","repos","file","undefined","length","Fragment","className","onClick","closeFile","src","flag","alt","name","nativeName","population","region","subregion","capital","topLevelDomain","currencies","map","cur","index","languages","lang","borders","i","alpha3Code","CountriesList","repo","openFile","loading","Header","changeColor","darkMode","SearchBar","value","searchValue","type","onChange","e","search","placeholder","Dropdown","Toggle","variant","id","Menu","Item","style","color","filterValue","filter","App","useState","countries","setCountries","setFile","setSearchValue","setFilterValue","showFile","setShowFile","setDarkMode","useEffect","axios","get","then","response","console","log","data","openFileHandler","a","error","document","body","searchInput","target","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0916b651.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst FileLoader = () => (\r\n  <ContentLoader viewBox=\"0 0 380 70\">\r\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"70\" height=\"70\" />\r\n    <rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\r\n    <rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\r\n  </ContentLoader>\r\n);\r\n\r\nexport default FileLoader;\r\n","import React from \"react\";\r\nimport { HiArrowNarrowLeft } from \"react-icons/hi\";\r\nimport FileLoader from \"./FileLoader\";\r\n\r\nconst CountryFile = (props) => {\r\n  const { repos, file } = props;\r\n  if (file === undefined || file.length === 0) return <FileLoader />;\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"backBtn\" onClick={props.closeFile}>\r\n        <HiArrowNarrowLeft className=\"icon\" />\r\n        Back\r\n      </button>\r\n      <div className=\"flexFile\">\r\n        <img src={props.flag} alt={props.name} className=\"flag\" />\r\n        <div className=\"infoWrapper\">\r\n          <h2>{props.name}</h2>\r\n          <div className=\"infoInner\">\r\n            <ul>\r\n              <li>\r\n                <span>Native Name: </span>\r\n                {props.nativeName}\r\n              </li>\r\n              <li>\r\n                <span>Population: </span>\r\n                {props.population}\r\n              </li>\r\n              <li>\r\n                <span>Region: </span>\r\n                {props.region}\r\n              </li>\r\n              <li>\r\n                <span>Sub Region: </span>\r\n                {props.subregion}\r\n              </li>\r\n              <li>\r\n                <span>Capital: </span>\r\n                {props.capital}\r\n              </li>\r\n              <li>\r\n                <span>Top Level Domain: </span>\r\n                {props.topLevelDomain}\r\n              </li>\r\n              <li>\r\n                <span>Currencies: </span>\r\n                {props.currencies.map((cur, index) => {\r\n                  if (props.currencies.length > 1) {\r\n                    return (\r\n                      <React.Fragment key={index}>{cur.name}, </React.Fragment>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <React.Fragment key={index}>{cur.name} </React.Fragment>\r\n                    );\r\n                  }\r\n                })}\r\n              </li>\r\n              <li>\r\n                <span>Languages: </span>\r\n                {props.languages.map((lang, index) => {\r\n                  if (props.languages.length > 1) {\r\n                    return (\r\n                      <React.Fragment key={index}>{lang.name}, </React.Fragment>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <React.Fragment key={index}>{lang.name} </React.Fragment>\r\n                    );\r\n                  }\r\n                })}\r\n              </li>\r\n            </ul>\r\n            <div className=\"borderWrapper\">\r\n              <span>Border Countries:</span>\r\n              <div>\r\n                {props.borders.length === 0 ? (\r\n                  <span>none</span>\r\n                ) : (\r\n                  props.borders.map((borders, index) => {\r\n                    for (let i = 0; i < repos.length; i++) {\r\n                      if (borders === repos[i].alpha3Code) {\r\n                        return <span key={index}>{repos[i].name}</span>;\r\n                      }\r\n                    }\r\n                    return null;\r\n                  })\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CountryFile;\r\n","import React from \"react\";\r\n\r\nconst CountriesList = (props) => {\r\n  const { repos } = props;\r\n  return (\r\n    <div className=\"grid\">\r\n      {repos.map((repo, index) => {\r\n        return (\r\n          <div\r\n            className=\"country-box\"\r\n            key={index}\r\n            onClick={() => {\r\n              props.openFile(repo.name);\r\n            }}\r\n          >\r\n            <img loading=\"lazy\" src={repo.flag} alt={repo.name} />\r\n            <ul>\r\n              <li>\r\n                <h2>{repo.name}</h2>\r\n              </li>\r\n              <li>\r\n                <span>Population:</span> {repo.population}\r\n              </li>\r\n              <li>\r\n                <span>Region:</span> {repo.region}\r\n              </li>\r\n              <li>\r\n                <span>Capital:</span> {repo.capital}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountriesList;\r\n","import React from \"react\";\r\nimport { BsMoon } from \"react-icons/bs\";\r\nimport { BiMoon } from \"react-icons/bi\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <div className=\"wrapper flex\">\r\n        <h1>Where in the world?</h1>\r\n        <button onClick={props.changeColor}>\r\n          {props.darkMode ? <BsMoon /> : <BiMoon />} Dark Mode\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { IoIosArrowDown } from \"react-icons/io\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nconst SearchBar = (props) => {\r\n  return (\r\n    <nav>\r\n      <div className=\"searchbar\">\r\n        <AiOutlineSearch />\r\n        <input\r\n          value={props.searchValue}\r\n          type=\"\"\r\n          onChange={(e) => props.search(e)}\r\n          placeholder=\"Search for a country...\"\r\n        />\r\n      </div>\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          <p>Filter by Region</p>\r\n          <IoIosArrowDown />\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item\r\n            style={{\r\n              color: props.filterValue === \"africa\" ? \"#e82c2c\" : null,\r\n            }}\r\n            onClick={() => props.filter(\"africa\")}\r\n          >\r\n            Africa\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            style={{\r\n              color: props.filterValue === \"americas\" ? \"#e82c2c\" : null,\r\n            }}\r\n            onClick={() => props.filter(\"americas\")}\r\n          >\r\n            America\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            style={{\r\n              color: props.filterValue === \"asia\" ? \"#e82c2c\" : null,\r\n            }}\r\n            onClick={() => props.filter(\"asia\")}\r\n          >\r\n            Asia\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            style={{\r\n              color: props.filterValue === \"europe\" ? \"#e82c2c\" : null,\r\n            }}\r\n            onClick={() => props.filter(\"europe\")}\r\n          >\r\n            Europe\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            style={{\r\n              color: props.filterValue === \"oceania\" ? \"#e82c2c\" : null,\r\n            }}\r\n            onClick={() => props.filter(\"oceania\")}\r\n          >\r\n            Oceania\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.scss\";\r\n\r\nimport CountryFile from \"./components/CountryFile\";\r\nimport CountriesList from \"./components/CountriesList\";\r\nimport Header from \"./components/Header\";\r\nimport SearchBar from \"./components/SearchBar\";\r\n\r\nfunction App() {\r\n  const [countries, setCountries] = useState({ repos: null });\r\n  const [file, setFile] = useState();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const [showFile, setShowFile] = useState(false);\r\n\r\n  const [darkMode, setDarkMode] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   const apiUrl = \"https://restcountries.eu/rest/v2/all\";\r\n  //   fetch(apiUrl)\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => {\r\n  //       console.log(data);\r\n  //       setCountries({ repos: data });\r\n  //     });\r\n  // }, [setCountries]);\r\n\r\n  useEffect(() => {\r\n    const apiUrl = \"https://restcountries.eu/rest/v2/all\";\r\n    axios.get(apiUrl).then((response) => {\r\n      console.log(response);\r\n      setCountries({ repos: response.data });\r\n    });\r\n  }, [setCountries]);\r\n\r\n  const openFileHandler = async (name) => {\r\n    try {\r\n      setShowFile(true);\r\n      setFile(\"\");\r\n      const response = await axios.get(\r\n        `https://restcountries.eu/rest/v2/name/${name}`\r\n      );\r\n      setFile(response.data[0]);\r\n      console.log(file);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const closeFileHandler = () => {\r\n    setShowFile(false);\r\n  };\r\n\r\n  const searchInputHandler = (e) => {\r\n    const searchInput = e.target.value;\r\n    setSearchValue(searchInput);\r\n  };\r\n\r\n  const filterHandler = (region) => {\r\n    const filter = region;\r\n    setFilterValue(filter);\r\n    if (filter === filterValue) {\r\n      setFilterValue(\"\");\r\n    }\r\n  };\r\n\r\n  const searchHandler = (data) => {\r\n    if (searchValue === \"\" && filterValue === \"\") {\r\n      return data;\r\n    } else if (filterValue !== \"\") {\r\n      return data.filter((data) =>\r\n        data.region.toLowerCase().includes(filterValue)\r\n      );\r\n    } else if (searchValue !== \"\") {\r\n      return data.filter(\r\n        (data) =>\r\n          data.name.toLowerCase().includes(searchValue) ||\r\n          data.nativeName.toLowerCase().includes(searchValue)\r\n      );\r\n    } else if (filterValue !== \"\" && searchValue !== \"\") {\r\n      return data.filter(\r\n        (data) =>\r\n          (data.region.toLowerCase().includes(filterValue) &&\r\n            data.name.toLowerCase().includes(searchValue)) ||\r\n          data.nativeName.toLowerCase().includes(searchValue)\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeColorHandler = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  if (darkMode) {\r\n    document.body.style = \"background: #202c37;\";\r\n  } else {\r\n    document.body.style = \"background: #fafafa;\";\r\n  }\r\n\r\n  if (!countries.repos || countries.repos.length === 0)\r\n    return <p>Loading...</p>;\r\n  return (\r\n    <div className={`App ${!darkMode ? `light` : ``}`}>\r\n      <Header changeColor={changeColorHandler} darkMode={darkMode} />\r\n      <div className=\"wrapper\">\r\n        {showFile ? (\r\n          <CountryFile\r\n            flag={file.flag}\r\n            name={file.name}\r\n            nativeName={file.nativeName}\r\n            population={file.population}\r\n            region={file.region}\r\n            subregion={file.subregion}\r\n            capital={file.capital}\r\n            topLevelDomain={file.topLevelDomain}\r\n            currencies={file.currencies}\r\n            languages={file.languages}\r\n            borders={file.borders}\r\n            closeFile={closeFileHandler}\r\n            repos={countries.repos}\r\n            file={file}\r\n          />\r\n        ) : (\r\n          <React.Fragment>\r\n            <SearchBar\r\n              searchValue={searchValue}\r\n              search={searchInputHandler}\r\n              filter={filterHandler}\r\n              filterValue={filterValue}\r\n            />\r\n            <CountriesList\r\n              repos={searchHandler(countries.repos)}\r\n              openFile={openFileHandler}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}